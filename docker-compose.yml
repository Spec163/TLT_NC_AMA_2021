
version: '3.4'

services:
  postgres:
    image: postgres:11.14
    restart: always
    environment:
      POSTGRES_PASSWORD: test
      POSTGRES_USER: test
      POSTGRES_DB: test
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - 5432:5432

  adminer:
    image: adminer
    restart: always
    ports:
      - 3001:8080

  discovery:
    build:
      context: ./projects/hotel_automation_project/discovery_evr
      dockerfile: Discovery.Dockerfile
    ports:
      - 3010:80
    environment:
      EUREKA_URL: http://discovery:80/eureka/eureka/
      DOMAIN_NAME: discovery

  gateway:
    build:
      context: ./projects/hotel_automation_project/gateway
      dockerfile: Gateway.Dockerfile
    ports:
      - 3000:80
    environment:
      EUREKA_URL: http://discovery:80/eureka/eureka/
      DOMAIN_NAME: gateway

  complains:
    build:
      context: ./projects/hotel_automation_project/complaint_handling_service
      dockerfile: Complaints.Dockerfile
    ports:
      - 3011:80
    environment:
      EUREKA_URL: http://discovery:80/eureka/eureka/
      DOMAIN_NAME: complains
      DATABASE_URL: jdbc:postgresql://postgres:5432/test
      DATABASE_USER: test
      DATABASE_PASS: test

  bank:
    build:
      context: ./projects/hotel_automation_project/bank_service
      dockerfile: Bank.Dockerfile
    ports:
      - 3012:80
    environment:
      EUREKA_URL: http://discovery:80/eureka/eureka/
      DOMAIN_NAME: bank
      DATABASE_URL: jdbc:postgresql://postgres:5432/test
      DATABASE_USER: test
      DATABASE_PASS: test

  guest:
    build:
      context: ./projects/hotel_automation_project/guest_service
      dockerfile: Guest.Dockerfile
    ports:
      - 3013:80
    environment:
      EUREKA_URL: http://discovery:80/eureka/eureka/
      DOMAIN_NAME: guest
      DATABASE_URL: jdbc:postgresql://postgres:5432/test
      DATABASE_USER: test
      DATABASE_PASS: test

volumes:
  pg_data:
